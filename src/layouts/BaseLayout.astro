---
// BaseLayout.astro - Clean & TypeScript Fixed
export interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonical?: string | URL;
  noindex?: boolean;
  type?: 'website' | 'article';
}

const {
  title = 'Premium Warehouse Rentals | Ariel Realty',
  description = 'Find premium warehouse and industrial space across South Florida. Expert tenant representation with zero fees.',
  image = '/images/og-default.jpg',
  canonical,
  noindex = false,
  type = 'website'
} = Astro.props;

// Ensure canonical is always a string
const canonicalURL = canonical 
  ? (typeof canonical === 'string' ? canonical : canonical.toString())
  : new URL(Astro.url.pathname, Astro.site).toString();

// Generate full image URL
const fullImageURL = new URL(image, Astro.site).toString();
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  
  <!-- Primary Meta Tags -->
  <title>{title}</title>
  <meta name="title" content={title} />
  <meta name="description" content={description} />
  {canonical && <link rel="canonical" href={canonicalURL} />}
  {noindex && <meta name="robots" content="noindex, nofollow" />}

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content={type} />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={fullImageURL} />
  <meta property="og:site_name" content="Ariel Realty" />

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={canonicalURL} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={fullImageURL} />

  <!-- Favicons -->
  <link rel="icon" type="image/x-icon" href="/favicon.ico" />
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
  <link rel="manifest" href="/site.webmanifest" />

  <!-- Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
  
  <!-- GSAP -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"></script>
  
  <!-- Tailwind CSS -->
  <script src="https://cdn.tailwindcss.com"></script>

  <!-- Global Styles -->
  <style>
    .text-gradient {
      background: linear-gradient(135deg, #2563eb 0%, #06b6d4 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }
    
    .shadow-premium {
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08), 0 1px 2px rgba(0, 0, 0, 0.05);
    }
    
    .hover-lift {
      transition: all 0.3s ease;
    }
    
    .hover-lift:hover {
      transform: translateY(-4px);
      box-shadow: 0 16px 64px rgba(0, 0, 0, 0.12), 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .float {
      animation: float 6s ease-in-out infinite;
    }

    .float-reverse {
      animation: floatReverse 8s ease-in-out infinite;
    }

    @keyframes float {
      0%, 100% { transform: translateY(0px); }
      50% { transform: translateY(-20px); }
    }

    @keyframes floatReverse {
      0%, 100% { transform: translateY(-10px); }
      50% { transform: translateY(10px); }
    }

    .bg-pattern-grid {
      background-image: 
        linear-gradient(rgba(148, 163, 184, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, rgba(148, 163, 184, 0.1) 1px, transparent 1px);
      background-size: 50px 50px;
    }

    .bg-pattern-dots {
      background-image: radial-gradient(circle, rgb(148 163 184 / 0.3) 1px, transparent 1px);
      background-size: 24px 24px;
    }

    /* Navigation Styles */
    .premium-nav {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);
      transition: all 0.3s ease;
    }

    .premium-nav.scrolled {
      background: rgba(255, 255, 255, 0.98);
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .mobile-menu {
      transform: translateY(-100%);
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }

    .mobile-menu.open {
      transform: translateY(0);
      opacity: 1;
      visibility: visible;
    }

    /* Line clamp utility */
    .line-clamp-3 {
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
  </style>
</head>
<body class="bg-slate-50 text-slate-900 antialiased">
  <slot />

  <!-- Global Navigation Script -->
  <script is:inline>
    document.addEventListener('DOMContentLoaded', function() {
      // Mobile menu toggle
      const mobileMenuBtn = document.getElementById('mobile-menu-btn');
      const mobileMenu = document.getElementById('mobile-menu');
      
      if (mobileMenuBtn && mobileMenu) {
        mobileMenuBtn.addEventListener('click', function() {
          mobileMenu.classList.toggle('open');
        });
      }

      // Navigation scroll effect
      const nav = document.getElementById('main-nav');
      if (nav) {
        window.addEventListener('scroll', function() {
          if (window.scrollY > 50) {
            nav.classList.add('scrolled');
          } else {
            nav.classList.remove('scrolled');
          }
        });
      }

      // Initialize GSAP animations if available
      if (typeof gsap !== 'undefined') {
        gsap.registerPlugin(ScrollTrigger);
        
        // Global fade-in animations
        gsap.fromTo('.gsap-fade-in', 
          { opacity: 0, y: 60, scale: 0.95 },
          { 
            opacity: 1, 
            y: 0, 
            scale: 1,
            duration: 1.2,
            stagger: 0.15,
            ease: "power3.out",
            delay: 0.2
          }
        );

        // Stagger animations
        gsap.fromTo('.gsap-stagger > *', 
          { opacity: 0, y: 30 },
          { 
            opacity: 1, 
            y: 0,
            duration: 0.8,
            stagger: 0.1,
            ease: "power2.out",
            scrollTrigger: {
              trigger: '.gsap-stagger',
              start: 'top 80%'
            }
          }
        );

        // Left slide animations
        gsap.fromTo('.gsap-fade-in-left', 
          { opacity: 0, x: -60 },
          { 
            opacity: 1, 
            x: 0,
            duration: 0.8,
            ease: "power2.out",
            scrollTrigger: {
              trigger: '.gsap-fade-in-left',
              start: 'top 80%'
            }
          }
        );

        // Right slide animations
        gsap.fromTo('.gsap-fade-in-right', 
          { opacity: 0, x: 60 },
          { 
            opacity: 1, 
            x: 0,
            duration: 0.8,
            ease: "power2.out",
            scrollTrigger: {
              trigger: '.gsap-fade-in-right',
              start: 'top 80%'
            }
          }
        );
      }
    });
  </script>
</body>
</html>