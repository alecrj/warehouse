---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// Get featured warehouses (real listings only)
let warehouses: any[] = [];
let featuredWarehouses: any[] = [];

try {
  warehouses = await getCollection('warehouses');
  featuredWarehouses = warehouses
    .filter(w => w.data.featured && w.data.availability === 'available')
    .slice(0, 6);
} catch (error) {
  // Handle case where no warehouses exist yet
  console.log('No warehouses found, using empty array');
  warehouses = [];
  featuredWarehouses = [];
}

// Add some stats for credibility
const stats = [
  { value: '2.5M+', label: 'SF Leased This Year', icon: 'warehouse' },
  { value: '150+', label: 'Happy Clients', icon: 'users' },
  { value: '3', label: 'Counties Served', icon: 'location' },
  { value: '24hr', label: 'Response Time', icon: 'clock' }
];
---

<BaseLayout>
  <!-- Hero Section - Premium Design with Advanced Animations -->
  <section class="relative min-h-screen flex items-center overflow-hidden bg-gradient-to-br from-slate-900 via-primary-900 to-indigo-900">
    <!-- Animated Background Elements -->
    <div class="absolute inset-0">
      <!-- Primary gradient overlay -->
      <div class="absolute inset-0 bg-gradient-to-r from-primary-600/20 to-purple-600/20"></div>
      
      <!-- Animated grid pattern -->
      <div class="absolute inset-0 opacity-10">
        <div class="absolute inset-0" style="background-image: radial-gradient(circle at 1px 1px, rgba(255,255,255,0.15) 1px, transparent 0); background-size: 40px 40px;"></div>
      </div>
      
      <!-- Floating geometric elements -->
      <div class="absolute top-20 left-10 w-32 h-32 bg-primary-500/20 rounded-full blur-xl animate-float"></div>
      <div class="absolute bottom-20 right-10 w-40 h-40 bg-purple-500/20 rounded-full blur-xl animate-float" style="animation-delay: -2s;"></div>
      <div class="absolute top-1/2 left-1/4 w-24 h-24 bg-secondary-500/20 rounded-full blur-xl animate-float" style="animation-delay: -4s;"></div>
      
      <!-- Subtle moving elements -->
      <div class="absolute top-1/3 right-1/3 w-2 h-2 bg-white rounded-full animate-pulse-gentle"></div>
      <div class="absolute bottom-1/3 left-1/3 w-1 h-1 bg-primary-300 rounded-full animate-pulse-gentle" style="animation-delay: -1s;"></div>
    </div>
    
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl relative z-10">
      <div class="grid lg:grid-cols-2 gap-16 items-center">
        <!-- Hero Content -->
        <div class="text-white">
          <div class="inline-flex items-center px-4 py-2 glass border border-white/20 rounded-full text-sm font-medium mb-8 animate-on-scroll" style="animation-delay: 0.2s;">
            <span class="w-2 h-2 bg-secondary-400 rounded-full mr-3 animate-pulse"></span>
            South Florida's Premier Industrial Specialists
          </div>
          
          <h1 class="text-5xl lg:text-7xl font-bold leading-tight mb-8 animate-on-scroll" style="animation-delay: 0.4s;">
            Find Your Perfect
            <span class="bg-gradient-to-r from-secondary-400 to-primary-400 bg-clip-text text-transparent">
              Warehouse Space
            </span>
          </h1>
          
          <p class="text-xl lg:text-2xl text-primary-100 mb-12 leading-relaxed max-w-2xl animate-on-scroll" style="animation-delay: 0.6s;">
            Expert tenant representation across Miami-Dade, Broward, and Palm Beach counties.
            <span class="text-secondary-300 font-semibold">Completely free for tenants.</span>
          </p>
          
          <!-- CTA Buttons -->
          <div class="flex flex-col sm:flex-row gap-6 animate-on-scroll" style="animation-delay: 0.8s;">
            <a href="/warehouses" class="btn-hover group bg-gradient-to-r from-secondary-600 to-secondary-700 hover:from-secondary-700 hover:to-secondary-800 text-white px-8 py-4 rounded-2xl font-bold text-lg transition-all duration-300 transform hover:scale-105 shadow-xl hover:shadow-2xl text-center">
              <span class="flex items-center justify-center">
                <svg class="w-6 h-6 mr-3 transition-transform duration-300 group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
                Browse Properties
              </span>
            </a>
            
            <a href="tel:+19549379667" class="btn-hover group glass border border-white/30 text-white hover:bg-white/10 px-8 py-4 rounded-2xl font-bold text-lg transition-all duration-300 transform hover:scale-105 text-center">
              <span class="flex items-center justify-center">
                <svg class="w-6 h-6 mr-3 transition-transform duration-300 group-hover:scale-110" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"></path>
                </svg>
                (954) 937-9667
              </span>
            </a>
          </div>
        </div>
        
        <!-- Hero Visual Element -->
        <div class="relative animate-on-scroll-right" style="animation-delay: 1s;">
          <div class="relative">
            <!-- Main card -->
            <div class="glass p-8 rounded-4xl border border-white/20 shadow-2xl transform rotate-3 hover:rotate-0 transition-transform duration-500">
              <div class="flex items-center justify-between mb-6">
                <div class="flex items-center space-x-3">
                  <div class="w-3 h-3 bg-red-500 rounded-full"></div>
                  <div class="w-3 h-3 bg-yellow-500 rounded-full"></div>
                  <div class="w-3 h-3 bg-secondary-500 rounded-full"></div>
                </div>
                <span class="text-white/60 text-sm font-medium">Property Search</span>
              </div>
              
              <div class="space-y-4">
                <div class="h-4 bg-white/20 rounded-full animate-pulse"></div>
                <div class="h-4 bg-white/15 rounded-full w-3/4 animate-pulse" style="animation-delay: 0.5s;"></div>
                <div class="h-4 bg-white/10 rounded-full w-1/2 animate-pulse" style="animation-delay: 1s;"></div>
              </div>
              
              <div class="mt-8 pt-6 border-t border-white/20">
                <div class="flex items-center justify-between text-sm text-white/80">
                  <span>Available Properties</span>
                  <span class="text-secondary-300 font-semibold">{warehouses.length || 0}+ Listings</span>
                </div>
              </div>
            </div>
            
            <!-- Floating accent cards -->
            <div class="absolute -top-6 -right-6 w-24 h-24 glass rounded-2xl p-4 animate-bounce-gentle">
              <svg class="w-full h-full text-secondary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
              </svg>
            </div>
            
            <div class="absolute -bottom-6 -left-6 w-20 h-20 glass rounded-2xl p-3 animate-bounce-gentle" style="animation-delay: -1s;">
              <svg class="w-full h-full text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Stats Section -->
  <section class="py-16 bg-white border-b border-gray-100">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl">
      <div class="grid grid-cols-2 lg:grid-cols-4 gap-8">
        {stats.map((stat, index) => (
          <div class="text-center animate-on-scroll-scale" style={`animation-delay: ${index * 0.1}s;`}>
            <div class="relative mb-4">
              <div class="w-16 h-16 bg-gradient-to-br from-primary-100 to-primary-200 rounded-2xl flex items-center justify-center mx-auto">
                {stat.icon === 'warehouse' && (
                  <svg class="w-8 h-8 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                  </svg>
                )}
                {stat.icon === 'users' && (
                  <svg class="w-8 h-8 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                  </svg>
                )}
                {stat.icon === 'location' && (
                  <svg class="w-8 h-8 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                  </svg>
                )}
                {stat.icon === 'clock' && (
                  <svg class="w-8 h-8 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                )}
              </div>
            </div>
            <div class="text-3xl lg:text-4xl font-bold text-gray-900 mb-2">{stat.value}</div>
            <div class="text-gray-600 font-medium">{stat.label}</div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Featured Properties Section -->
  {featuredWarehouses.length > 0 && (
    <section class="py-20 bg-gradient-to-br from-gray-50 to-white">
      <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl">
        <div class="text-center mb-16 animate-on-scroll">
          <h2 class="text-4xl lg:text-5xl font-bold text-gray-900 mb-6">
            Featured Properties
          </h2>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">
            Discover premium warehouse and industrial spaces across South Florida's most strategic locations.
          </p>
        </div>

        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {featuredWarehouses.map((warehouse, index) => (
            <div class="group bg-white rounded-4xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 animate-on-scroll-scale" style={`animation-delay: ${index * 0.1}s;`}>
              
              <!-- Property Image -->
              {warehouse.data.images && warehouse.data.images[0] && (
                <div class="relative h-64 overflow-hidden">
                  <img 
                    src={warehouse.data.images[0]} 
                    alt={warehouse.data.title}
                    class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
                    loading="lazy"
                  />
                  
                  <!-- Availability badge -->
                  <div class="absolute top-4 left-4">
                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-secondary-500 text-white">
                      <span class="w-2 h-2 bg-white rounded-full mr-2 animate-pulse"></span>
                      Available Now
                    </span>
                  </div>
                  
                  <!-- Gradient overlay -->
                  <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                </div>
              )}
              
              <div class="p-8">
                <h3 class="text-xl font-bold text-gray-900 mb-3 group-hover:text-primary-600 transition-colors duration-300">
                  <a href={`/warehouses/${warehouse.data.slug}`}>
                    {warehouse.data.title}
                  </a>
                </h3>
                
                <div class="flex items-center text-gray-600 mb-6">
                  <svg class="w-5 h-5 mr-3 text-primary-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                  </svg>
                  <span class="font-medium">{warehouse.data.location}</span>
                </div>
                
                <div class="grid grid-cols-2 gap-4 mb-8">
                  <div class="bg-gradient-to-br from-primary-50 to-primary-100 p-4 rounded-2xl text-center border border-primary-200/50">
                    <div class="text-2xl font-bold text-primary-600 mb-1">{warehouse.data.size.toLocaleString()}</div>
                    <div class="text-sm text-primary-600/80 font-medium">Square Feet</div>
                  </div>
                  <div class="bg-gradient-to-br from-secondary-50 to-secondary-100 p-4 rounded-2xl text-center border border-secondary-200/50">
                    <div class="text-lg font-bold text-secondary-600 mb-1">{warehouse.data.price}</div>
                    <div class="text-sm text-secondary-600/80 font-medium">per sf/year</div>
                  </div>
                </div>
                
                <div class="flex gap-3">
                  <a href={`/warehouses/${warehouse.data.slug}`} class="flex-1 bg-gradient-to-r from-primary-600 to-primary-700 hover:from-primary-700 hover:to-primary-800 text-white px-6 py-3 rounded-2xl font-bold text-center transition-all duration-300 transform group-hover:scale-105">
                    View Details
                  </a>
                  <a href="tel:+19549379667" class="w-12 h-12 bg-gray-100 hover:bg-secondary-500 hover:text-white rounded-2xl flex items-center justify-center transition-all duration-300 group">
                    <svg class="w-5 h-5 transition-transform duration-300 group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                    </svg>
                  </a>
                </div>
              </div>
            </div>
          ))}
        </div>

        <!-- View All Properties CTA -->
        <div class="text-center mt-16 animate-on-scroll">
          <a href="/warehouses" class="inline-flex items-center px-8 py-4 bg-gradient-to-r from-primary-600 to-primary-700 hover:from-primary-700 hover:to-primary-800 text-white rounded-2xl font-bold text-lg transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl">
            <span>View All Properties</span>
            <svg class="w-6 h-6 ml-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
            </svg>
          </a>
        </div>
      </div>
    </section>
  )}

  <!-- Services Section -->
  <section class="py-20 bg-white">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl">
      <div class="text-center mb-16 animate-on-scroll">
        <h2 class="text-4xl lg:text-5xl font-bold text-gray-900 mb-6">
          Why Choose Ariel Realty Group?
        </h2>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto">
          We provide comprehensive tenant representation services at no cost to you. Our expertise saves you time, money, and ensures you get the best deal possible.
        </p>
      </div>

      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {[
          {
            title: "Free Tenant Representation",
            description: "Our services are completely free for tenants. We're compensated by landlords, so you get expert guidance at zero cost.",
            icon: "shield",
            color: "secondary"
          },
          {
            title: "Market Expertise", 
            description: "Deep knowledge of South Florida's industrial markets with access to both on-market and off-market properties.",
            icon: "chart",
            color: "primary"
          },
          {
            title: "Negotiation Power",
            description: "Leverage our relationships and experience to secure the best terms, rates, and concessions for your lease.",
            icon: "handshake",
            color: "accent"
          },
          {
            title: "Site Selection",
            description: "We help identify properties that match your operational requirements, logistics needs, and budget constraints.",
            icon: "location",
            color: "primary"
          },
          {
            title: "Due Diligence",
            description: "Comprehensive property analysis including zoning, permits, infrastructure, and environmental considerations.",
            icon: "document",
            color: "secondary"
          },
          {
            title: "Ongoing Support",
            description: "Continued support throughout the lease term for renewals, expansions, or additional space requirements.",
            icon: "support",
            color: "accent"
          }
        ].map((service, index) => (
          <div class="group bg-gradient-to-br from-gray-50 to-white p-8 rounded-4xl hover:shadow-lg transition-all duration-300 border border-gray-100 hover:border-gray-200 animate-on-scroll-scale" style={`animation-delay: ${index * 0.1}s;`}>
            <div class={`w-16 h-16 bg-gradient-to-br from-${service.color}-100 to-${service.color}-200 rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300`}>
              {service.icon === 'shield' && (
                <svg class={`w-8 h-8 text-${service.color}-600`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>
                </svg>
              )}
              {service.icon === 'chart' && (
                <svg class={`w-8 h-8 text-${service.color}-600`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z"></path>
                </svg>
              )}
              {service.icon === 'handshake' && (
                <svg class={`w-8 h-8 text-${service.color}-600`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z"></path>
                </svg>
              )}
              {service.icon === 'location' && (
                <svg class={`w-8 h-8 text-${service.color}-600`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                </svg>
              )}
              {service.icon === 'document' && (
                <svg class={`w-8 h-8 text-${service.color}-600`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
              )}
              {service.icon === 'support' && (
                <svg class={`w-8 h-8 text-${service.color}-600`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192L5.636 18.364M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-5 0a4 4 0 11-8 0 4 4 0 018 0z"></path>
                </svg>
              )}
            </div>
            
            <h3 class="text-xl font-bold text-gray-900 mb-4 group-hover:text-primary-600 transition-colors duration-300">
              {service.title}
            </h3>
            
            <p class="text-gray-600 leading-relaxed">
              {service.description}
            </p>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="py-20 bg-gradient-to-br from-primary-600 via-primary-700 to-primary-800 text-white relative overflow-hidden">
    <!-- Background decoration -->
    <div class="absolute inset-0 opacity-10">
      <div class="absolute inset-0" style="background-image: radial-gradient(circle at 1px 1px, rgba(255,255,255,0.15) 1px, transparent 0); background-size: 40px 40px;"></div>
    </div>
    
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl relative z-10">
      <div class="text-center animate-on-scroll">
        <h2 class="text-4xl lg:text-5xl font-bold mb-6">
          Ready to Find Your Perfect Space?
        </h2>
        <p class="text-xl text-primary-100 mb-12 max-w-3xl mx-auto">
          Let our experts help you find the ideal warehouse or industrial property for your business. 
          Get started with a free consultation and property search.
        </p>
        
        <div class="flex flex-col sm:flex-row gap-6 justify-center animate-on-scroll" style="animation-delay: 0.3s;">
          <a href="/contact" class="btn-hover bg-white text-primary-600 px-8 py-4 rounded-2xl font-bold text-lg hover:bg-gray-50 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl">
            Start Your Search
          </a>
          
          <a href="tel:+19549379667" class="btn-hover glass border border-white/30 text-white hover:bg-white/10 px-8 py-4 rounded-2xl font-bold text-lg transition-all duration-300 transform hover:scale-105">
            <span class="flex items-center justify-center">
              <svg class="w-6 h-6 mr-3" fill="currentColor" viewBox="0 0 20 20">
                <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"></path>
              </svg>
              Call (954) 937-9667
            </span>
          </a>
        </div>
      </div>
    </div>
  </section>
</BaseLayout>

<!-- Enhanced Animation Styles -->
<style>
  /* Advanced keyframe animations */
  @keyframes float {
    0%, 100% { 
      transform: translateY(0px) rotate(0deg); 
    }
    50% { 
      transform: translateY(-20px) rotate(1deg); 
    }
  }
  
  @keyframes pulseGentle {
    0%, 100% { 
      opacity: 1; 
      transform: scale(1);
    }
    50% { 
      opacity: 0.8; 
      transform: scale(1.05);
    }
  }
  
  @keyframes bounceGentle {
    0%, 100% { 
      transform: translateY(0); 
    }
    50% { 
      transform: translateY(-10px); 
    }
  }
  
  /* Custom animation classes */
  .animate-float {
    animation: float 8s ease-in-out infinite;
  }
  
  .animate-pulse-gentle {
    animation: pulseGentle 3s ease-in-out infinite;
  }
  
  .animate-bounce-gentle {
    animation: bounceGentle 2s ease-in-out infinite;
  }
  
  /* Improved form styles with focus states */
  .form-input:focus,
  .form-select:focus {
    transform: translateY(-1px);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 0 0 3px rgba(59, 130, 246, 0.1);
  }
  
  /* Enhanced gradient text animation */
  .gradient-text-animate {
    background: linear-gradient(-45deg, #667eea, #764ba2, #667eea, #764ba2);
    background-size: 400% 400%;
    animation: gradientShift 4s ease infinite;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  @keyframes gradientShift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }
</style>

<script>
  // Enhanced animation system
  document.addEventListener('DOMContentLoaded', (): void => {
    // Intersection Observer for scroll animations with enhanced options
    const observerOptions: IntersectionObserverInit = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries: IntersectionObserverEntry[]) => {
      entries.forEach((entry: IntersectionObserverEntry) => {
        if (entry.isIntersecting) {
          const element = entry.target as HTMLElement;
          element.classList.add('animate');
          
          // Unobserve after animation to improve performance
          observer.unobserve(element);
        }
      });
    }, observerOptions);

    // Observe all animation elements
    const animateElements = document.querySelectorAll('.animate-on-scroll, .animate-on-scroll-left, .animate-on-scroll-right, .animate-on-scroll-scale') as NodeListOf<HTMLElement>;
    animateElements.forEach((el: HTMLElement) => {
      observer.observe(el);
    });

    // Enhanced hover effects for cards
    const cards = document.querySelectorAll('.group') as NodeListOf<HTMLElement>;
    cards.forEach((card: HTMLElement) => {
      card.addEventListener('mouseenter', (): void => {
        card.style.transform = 'translateY(-8px) scale(1.02)';
      });
      
      card.addEventListener('mouseleave', (): void => {
        card.style.transform = 'translateY(0) scale(1)';
      });
    });

    // Smooth reveal for stats numbers
    const statsElements = document.querySelectorAll('[data-stat]') as NodeListOf<HTMLElement>;
    const statsObserver = new IntersectionObserver((entries: IntersectionObserverEntry[]) => {
      entries.forEach((entry: IntersectionObserverEntry) => {
        if (entry.isIntersecting) {
          const element = entry.target as HTMLElement;
          const finalValue = element.textContent || '0';
          
          // Animate numbers if they contain digits
          if (/\d/.test(finalValue)) {
            animateNumber(element, finalValue);
          }
          
          statsObserver.unobserve(element);
        }
      });
    }, { threshold: 0.5 });

    // Function to animate numbers
    function animateNumber(element: HTMLElement, finalValue: string): void {
      const duration = 2000;
      const startTime = performance.now();
      const numericValue = parseInt(finalValue.replace(/\D/g, '')) || 0;
      
      const animate = (currentTime: number): void => {
        const elapsed = currentTime - startTime;
        const progress = Math.min(elapsed / duration, 1);
        
        // Easing function
        const easeOutQuart = 1 - Math.pow(1 - progress, 4);
        const currentValue = Math.round(numericValue * easeOutQuart);
        
        // Update element with formatted value
        if (finalValue.includes('M')) {
          element.textContent = (currentValue / 1000000).toFixed(1) + 'M+';
        } else if (finalValue.includes('+')) {
          element.textContent = currentValue.toLocaleString() + '+';
        } else {
          element.textContent = currentValue.toString() + (finalValue.includes('hr') ? 'hr' : '');
        }
        
        if (progress < 1) {
          requestAnimationFrame(animate);
        } else {
          element.textContent = finalValue; // Ensure final value is exact
        }
      };
      
      requestAnimationFrame(animate);
    }

    // Apply to stats elements
    const statValues = document.querySelectorAll('.text-3xl, .text-4xl') as NodeListOf<HTMLElement>;
    statValues.forEach((el: HTMLElement) => {
      if (el.textContent && /\d/.test(el.textContent)) {
        el.setAttribute('data-stat', el.textContent);
        statsObserver.observe(el);
      }
    });
  });
</script>