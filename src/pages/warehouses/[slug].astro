---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const warehouses = await getCollection('warehouses');
  return warehouses.map((warehouse) => ({
    params: { slug: warehouse.data.slug },
    props: { warehouse },
  }));
}

interface Props {
  warehouse: CollectionEntry<'warehouses'>;
}

const { warehouse } = Astro.props;
const { data } = warehouse;

// Get related properties
const allWarehouses = await getCollection('warehouses');
const relatedProperties = allWarehouses
  .filter(w => w.data.slug !== data.slug && w.data.availability === 'available')
  .slice(0, 3);

// Extract city for map
const city = data.location.split(',')[0]?.trim() || '';
---

<BaseLayout 
  title={`${data.title} | ${data.location} | Ariel Realty Group`}
  description={`${data.size.toLocaleString()} SF warehouse for lease in ${data.location}. ${data.price}. ${data.description.substring(0, 150)}...`}
>
  <!-- Hero Summary Stripe -->
  <section class="py-8 bg-blue-600 text-white">
    <div class="container mx-auto px-4 max-w-7xl">
      <div class="grid lg:grid-cols-4 gap-6 items-center">
        <div class="lg:col-span-2">
          <div class="flex items-center gap-3 mb-2">
            <span class={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${
              data.availability === 'available' 
                ? 'bg-green-500 text-white' 
                : 'bg-gray-400 text-white'
            }`}>
              {data.availability === 'available' ? 'Available Now' : data.availability}
            </span>
          </div>
          
          <h1 class="text-3xl lg:text-4xl font-bold mb-2">{data.title}</h1>
          
          <div class="flex items-center text-blue-100">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
            </svg>
            <span class="text-lg">{data.location}</span>
          </div>
        </div>
        
        <div class="lg:col-span-2">
          <div class="grid grid-cols-2 gap-4">
            <div class="text-center bg-white/10 backdrop-blur-sm rounded-2xl p-4">
              <div class="text-2xl font-bold">{data.size.toLocaleString()}</div>
              <div class="text-blue-100 text-sm">Square Feet</div>
            </div>
            <div class="text-center bg-white/10 backdrop-blur-sm rounded-2xl p-4">
              <div class="text-xl font-bold">{data.price}</div>
              <div class="text-blue-100 text-sm">per SF/year</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Main Content -->
  <div class="container mx-auto px-4 max-w-7xl py-16">
    <div class="grid lg:grid-cols-3 gap-12">
      <!-- Content Column -->
      <div class="lg:col-span-2 space-y-12">
        
        <!-- Image Gallery -->
        {data.images && data.images.length > 0 && (
          <section>
            <h2 class="text-2xl font-bold text-gray-900 mb-6">Property Gallery</h2>
            
            <!-- Main Image -->
            <div class="mb-6">
              <img 
                src={data.images[0]} 
                alt={`${data.title} - Main View`}
                class="w-full h-96 object-cover rounded-2xl shadow-lg"
                loading="eager"
              />
            </div>
            
            <!-- Thumbnail Grid -->
            {data.images.length > 1 && (
              <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                {data.images.slice(1, 5).map((image: string, index: number) => (
                  <button
                    type="button"
                    class="relative group overflow-hidden rounded-xl"
                    onclick={`showImage('${image}')`}
                  >
                    <img 
                      src={image} 
                      alt={`${data.title} - View ${index + 2}`}
                      class="w-full h-24 object-cover transition-transform duration-300 group-hover:scale-110"
                    />
                    <div class="absolute inset-0 bg-black/20 group-hover:bg-black/40 transition-colors duration-300"></div>
                  </button>
                ))}
              </div>
            )}
          </section>
        )}

        <!-- Property Details Table -->
        <section>
          <h2 class="text-2xl font-bold text-gray-900 mb-6">Property Details</h2>
          <div class="bg-gray-50 rounded-2xl overflow-hidden">
            <table class="w-full">
              <tbody class="divide-y divide-gray-200">
                <tr>
                  <td class="px-6 py-4 font-medium text-gray-900 bg-white">Address</td>
                  <td class="px-6 py-4 text-gray-700">{data.address}</td>
                </tr>
                <tr>
                  <td class="px-6 py-4 font-medium text-gray-900">Size</td>
                  <td class="px-6 py-4 text-gray-700">{data.size.toLocaleString()} SF</td>
                </tr>
                <tr>
                  <td class="px-6 py-4 font-medium text-gray-900 bg-white">Price</td>
                  <td class="px-6 py-4 text-gray-700">{data.price}</td>
                </tr>
                <tr>
                  <td class="px-6 py-4 font-medium text-gray-900">Availability</td>
                  <td class="px-6 py-4">
                    <span class={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${
                      data.availability === 'available' 
                        ? 'bg-green-100 text-green-800' 
                        : 'bg-gray-100 text-gray-800'
                    }`}>
                      {data.availability === 'available' ? 'Available Now' : data.availability}
                    </span>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </section>

        <!-- Features -->
        {data.features && data.features.length > 0 && (
          <section>
            <h2 class="text-2xl font-bold text-gray-900 mb-6">Features & Amenities</h2>
            <div class="grid md:grid-cols-2 gap-4">
              {data.features.map((feature: string) => (
                <div class="flex items-center p-4 bg-gray-50 rounded-xl">
                  <svg class="w-5 h-5 text-green-500 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                  <span class="font-medium text-gray-900">{feature}</span>
                </div>
              ))}
            </div>
          </section>
        )}

        <!-- Description -->
        <section>
          <h2 class="text-2xl font-bold text-gray-900 mb-6">Property Description</h2>
          <div class="prose prose-lg max-w-none">
            <p class="text-gray-700 leading-relaxed text-lg">{data.description}</p>
          </div>
        </section>

        <!-- Map -->
        <section>
          <h2 class="text-2xl font-bold text-gray-900 mb-6">Location & Access</h2>
          <div class="relative h-96 bg-gray-100 rounded-2xl overflow-hidden">
            <!-- Static Map Placeholder -->
            <div class="w-full h-full flex items-center justify-center">
              <div class="text-center">
                <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
                <h3 class="text-xl font-semibold text-gray-700 mb-2">{data.location}</h3>
                <p class="text-gray-500">Interactive map will be loaded here</p>
                <p class="text-sm text-gray-400 mt-2">Showing approximate location in {city}</p>
              </div>
            </div>
          </div>
        </section>
      </div>

      <!-- Sidebar -->
      <div class="lg:col-span-1">
        <div class="sticky top-24 space-y-8">
          
          <!-- Contact CTA -->
          <div class="bg-gradient-to-br from-blue-600 to-blue-700 text-white p-8 rounded-2xl">
            <h3 class="text-xl font-bold mb-4">Interested in This Property?</h3>
            <p class="text-blue-100 mb-6">
              Get expert guidance and schedule a showing. Our tenant representation is completely free.
            </p>
            
            <div class="space-y-4">
              <a href="tel:+19549379667" class="block w-full bg-white text-blue-600 px-6 py-4 rounded-xl font-bold text-center hover:bg-gray-50 transition-colors duration-300">
                <span class="flex items-center justify-center">
                  <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"></path>
                  </svg>
                  Call (954) 937-9667
                </span>
              </a>
              
              <a href="/contact?property=${data.slug}" class="block w-full bg-blue-500 text-white px-6 py-4 rounded-xl font-bold text-center hover:bg-blue-400 transition-colors duration-300">
                Request Information
              </a>
            </div>
          </div>

          <!-- Quick Stats -->
          <div class="bg-gray-50 p-6 rounded-2xl">
            <h3 class="font-bold text-gray-900 mb-4">Quick Stats</h3>
            <div class="space-y-3">
              <div class="flex justify-between">
                <span class="text-gray-600">Property Type</span>
                <span class="font-medium text-gray-900">Warehouse/Industrial</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600">Square Footage</span>
                <span class="font-medium text-gray-900">{data.size.toLocaleString()} SF</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600">Rate</span>
                <span class="font-medium text-gray-900">{data.price}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600">Status</span>
                <span class={`font-medium ${
                  data.availability === 'available' 
                    ? 'text-green-600' 
                    : 'text-gray-600'
                }`}>
                  {data.availability === 'available' ? 'Available' : data.availability}
                </span>
              </div>
            </div>
          </div>

          <!-- Share Options -->
          <div class="bg-white border border-gray-200 p-6 rounded-2xl">
            <h3 class="font-bold text-gray-900 mb-4">Share This Property</h3>
            <div class="flex gap-3">
              <button type="button" onclick="copyToClipboard()" class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 px-4 py-3 rounded-xl font-medium transition-colors duration-300 text-center">
                Copy Link
              </button>
              <button type="button" onclick="printProperty()" class="flex-1 bg-blue-100 hover:bg-blue-200 text-blue-700 px-4 py-3 rounded-xl font-medium transition-colors duration-300 text-center">
                Print
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Related Properties -->
    {relatedProperties.length > 0 && (
      <section class="mt-20">
        <h2 class="text-3xl font-bold text-gray-900 mb-8">Similar Properties</h2>
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {relatedProperties.map((warehouse) => (
            <div class="bg-white border border-gray-200 rounded-2xl overflow-hidden hover:shadow-lg transition-shadow duration-300">
              {warehouse.data.images && warehouse.data.images[0] && (
                <div class="h-48 overflow-hidden">
                  <img 
                    src={warehouse.data.images[0]} 
                    alt={warehouse.data.title}
                    class="w-full h-full object-cover hover:scale-105 transition-transform duration-500"
                  />
                </div>
              )}
              
              <div class="p-6">
                <h3 class="font-bold text-gray-900 mb-2 hover:text-blue-600 transition-colors duration-300">
                  <a href={`/warehouses/${warehouse.data.slug}`}>
                    {warehouse.data.title}
                  </a>
                </h3>
                
                <p class="text-gray-600 mb-4 flex items-center">
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                  </svg>
                  {warehouse.data.location}
                </p>
                
                <div class="flex items-center justify-between mb-6">
                  <div>
                    <div class="text-lg font-semibold text-gray-900">{warehouse.data.size.toLocaleString()} SF</div>
                    <div class="text-sm text-gray-600">{warehouse.data.price}</div>
                  </div>
                </div>
                
                <div class="flex gap-3">
                  <a href={`/warehouses/${warehouse.data.slug}`} class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 px-4 py-2 rounded-xl font-medium text-center transition-colors duration-300">
                    View Details
                  </a>
                  <a href="tel:+19549379667" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-xl transition-colors duration-300">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                    </svg>
                  </a>
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>
    )}
  </div>
</BaseLayout>

<!-- JavaScript for interactivity -->
<script>
  function showImage(imageUrl: string): void {
    const mainImage = document.querySelector('img[loading="eager"]') as HTMLImageElement;
    if (mainImage) {
      mainImage.src = imageUrl;
    }
  }

  function copyToClipboard(): void {
    navigator.clipboard.writeText(window.location.href).then(() => {
      alert('Property link copied to clipboard!');
    }).catch(() => {
      alert('Unable to copy link. Please copy manually from your browser address bar.');
    });
  }

  function printProperty(): void {
    window.print();
  }
</script>

<style>
  @media print {
    .no-print {
      display: none;
    }
    
    body {
      background: white;
    }
    
    .bg-gradient-to-br {
      background: #2563eb !important;
    }
  }
</style>