---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Navigation from '../../components/Navigation.astro';
import Footer from '../../components/Footer.astro';
import ImageGallery from '../../components/ImageGallery.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const warehouses = await getCollection('warehouses');
  return warehouses.map((warehouse) => ({
    params: { slug: warehouse.data.slug },
    props: { warehouse },
  }));
}

interface Props {
  warehouse: CollectionEntry<'warehouses'>;
}

const { warehouse } = Astro.props;
const { data } = warehouse;

// Get related properties
const allWarehouses = await getCollection('warehouses');
const relatedProperties = allWarehouses
  .filter(w => w.data.slug !== data.slug && w.data.availability === 'available')
  .slice(0, 3);

// Extract city for context
const city = data.location.split(',')[0]?.trim() || '';
---

<BaseLayout 
  title={`${data.title} | ${data.location} | Warehouse Locating`}
  description={`${data.size.toLocaleString()} SF warehouse for lease in ${data.location}. ${data.price}. ${data.description.substring(0, 150)}...`}
>
  <Navigation />
  
  <main>
    <!-- Hero Summary Stripe -->
    <section class="py-8 bg-gradient-to-r from-primary-600 to-primary-700">
      <div class="container mx-auto px-4 max-w-7xl">
        <div class="grid lg:grid-cols-4 gap-6 items-center text-white">
          <div class="lg:col-span-2">
            <div class="flex items-center gap-3 mb-2">
              <span class={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${
                data.availability === 'available' 
                  ? 'bg-green-500 text-white' 
                  : 'bg-gray-400 text-white'
              }`}>
                {data.availability === 'available' ? 'Available Now' : data.availability}
              </span>
            </div>
            
            <h1 class="text-2xl lg:text-4xl font-bold mb-2">{data.title}</h1>
            
            <div class="flex items-center text-blue-100">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
              </svg>
              <span class="text-lg">{data.location}</span>
            </div>
          </div>
          
          <div class="lg:col-span-2">
            <div class="grid grid-cols-2 gap-4">
              <div class="text-center p-4 rounded-2xl bg-white/10 backdrop-blur-sm">
                <div class="text-2xl font-bold">{data.size.toLocaleString()}</div>
                <div class="text-blue-100 text-sm">Square Feet</div>
              </div>
              <div class="text-center p-4 rounded-2xl bg-white/10 backdrop-blur-sm">
                <div class="text-xl font-bold">{data.price}</div>
                <div class="text-blue-100 text-sm">per SF/year</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Main Content -->
    <div class="container mx-auto px-4 max-w-7xl py-16">
      <div class="grid lg:grid-cols-3 gap-12">
        <!-- Main Content -->
        <div class="lg:col-span-2">
          <!-- Image Gallery -->
          <div class="mb-12">
            <ImageGallery images={data.images || []} title={data.title} availability={data.availability} />
          </div>

          <!-- Property Description -->
          <div class="mb-12">
            <h2 class="text-2xl font-semibold text-slate-900 mb-6">Property Description</h2>
            <div class="text-lg text-slate-700 leading-relaxed space-y-4">
              <p>{data.description}</p>
            </div>
          </div>

          <!-- Features -->
          {data.features && data.features.length > 0 && (
            <div class="mb-12">
              <h2 class="text-2xl font-semibold text-slate-900 mb-6">Features & Amenities</h2>
              <div class="grid md:grid-cols-2 gap-4">
                {data.features.map((feature) => (
                  <div class="flex items-center">
                    <svg class="w-5 h-5 text-green-500 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-slate-700">{feature}</span>
                  </div>
                ))}
              </div>
            </div>
          )}

          <!-- Location Info -->
          <div class="mb-12">
            <h2 class="text-2xl font-semibold text-slate-900 mb-6">Location Details</h2>
            <div class="bg-slate-50 p-6 rounded-2xl border border-slate-200">
              <div class="grid md:grid-cols-2 gap-6">
                <div>
                  <h3 class="text-lg font-semibold text-slate-900 mb-3">Address</h3>
                  <p class="text-slate-700">{data.address}</p>
                  <p class="text-slate-600">{data.location}</p>
                </div>
                <div>
                  <h3 class="text-lg font-semibold text-slate-900 mb-3">Market Area</h3>
                  <p class="text-slate-700">{city} Industrial Corridor</p>
                  <p class="text-slate-600">Prime South Florida location</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Sidebar -->
        <div class="lg:col-span-1">
          <!-- Contact Form -->
          <div class="bg-white p-6 rounded-2xl shadow-lg border border-slate-200 mb-8 sticky top-8">
            <h3 class="text-xl font-semibold text-slate-900 mb-6">Interested in This Property?</h3>
            
            <form name="property-inquiry" method="POST" data-netlify="true" action="/success" class="space-y-4">
              <input type="hidden" name="form-name" value="property-inquiry" />
              <input type="hidden" name="property" value={data.title} />
              
              <div>
                <label for="inquiry-name" class="block text-sm font-medium text-slate-700 mb-2">
                  Name *
                </label>
                <input 
                  type="text" 
                  id="inquiry-name" 
                  name="name" 
                  required 
                  class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600"
                  placeholder="Your Name"
                />
              </div>
              
              <div>
                <label for="inquiry-email" class="block text-sm font-medium text-slate-700 mb-2">
                  Email *
                </label>
                <input 
                  type="email" 
                  id="inquiry-email" 
                  name="email" 
                  required 
                  class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600"
                  placeholder="your@email.com"
                />
              </div>
              
              <div>
                <label for="inquiry-phone" class="block text-sm font-medium text-slate-700 mb-2">
                  Phone
                </label>
                <input 
                  type="tel" 
                  id="inquiry-phone" 
                  name="phone" 
                  class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600"
                  placeholder="(954) 123-4567"
                />
              </div>
              
              <div>
                <label for="inquiry-message" class="block text-sm font-medium text-slate-700 mb-2">
                  Message
                </label>
                <textarea 
                  id="inquiry-message" 
                  name="message" 
                  rows="4" 
                  class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600 resize-none"
                  placeholder="Tell us about your space requirements..."
                ></textarea>
              </div>
              
              <button 
                type="submit" 
                class="w-full bg-gradient-to-r from-primary-600 to-primary-700 text-white py-3 rounded-lg font-semibold hover:from-primary-700 hover:to-primary-800 transition-all duration-300"
              >
                Request Information
              </button>
            </form>
            
            <!-- Quick Contact -->
            <div class="mt-6 pt-6 border-t border-slate-200">
              <div class="space-y-3">
                <a href="tel:+19549379667" class="flex items-center text-slate-700 hover:text-blue-600 transition-colors">
                  <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                  </svg>
                  <span class="font-medium">(954) 937-9667</span>
                </a>
                
                <a href="mailto:info@warehouselocating.com" class="flex items-center text-slate-700 hover:text-blue-600 transition-colors">
                  <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 7.89a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                  </svg>
                  <span class="font-medium">info@warehouselocating.com</span>
                </a>
              </div>
            </div>
          </div>

          <!-- Property Stats -->
          <div class="bg-white p-6 rounded-2xl shadow-lg border border-slate-200">
            <h3 class="text-xl font-semibold text-slate-900 mb-6">Property Details</h3>
            
            <div class="space-y-4">
              <div class="flex justify-between">
                <span class="text-slate-600">Total Size</span>
                <span class="font-medium text-slate-900">{data.size.toLocaleString()} SF</span>
              </div>
              <div class="flex justify-between">
                <span class="text-slate-600">Price</span>
                <span class="font-medium text-slate-900">{data.price}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-slate-600">Availability</span>
                <span class={`font-medium ${
                  data.availability === 'available' ? 'text-green-600' : 'text-amber-600'
                }`}>
                  {data.availability === 'available' ? 'Available Now' : 'Coming Soon'}
                </span>
              </div>
              <div class="flex justify-between">
                <span class="text-slate-600">Property Type</span>
                <span class="font-medium text-slate-900">Industrial Warehouse</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Related Properties -->
      {relatedProperties.length > 0 && (
        <section class="mt-20">
          <h2 class="text-3xl font-bold text-slate-900 mb-12 text-center">
            Similar Properties
          </h2>
          
          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {relatedProperties.map((property) => (
              <div class="bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 group border border-slate-200">
                <div class="relative aspect-video overflow-hidden">
                  <img 
                    src={property.data.images?.[0] || '/api/placeholder/400/250'} 
                    alt={property.data.title}
                    class="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300"
                  />
                  <div class="absolute top-4 left-4">
                    <span class="px-3 py-1 bg-green-500 text-white text-sm rounded-full">
                      Available
                    </span>
                  </div>
                </div>
                
                <div class="p-6">
                  <div class="flex items-center text-slate-600 mb-2">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                    </svg>
                    <span class="text-sm">{property.data.location}</span>
                  </div>
                  
                  <h3 class="text-lg font-semibold text-slate-900 mb-4 group-hover:text-blue-600 transition-colors">
                    {property.data.title}
                  </h3>
                  
                  <div class="grid grid-cols-2 gap-4 mb-6">
                    <div class="text-center p-3 bg-slate-50 rounded-xl">
                      <div class="text-lg font-bold text-slate-900">
                        {property.data.size.toLocaleString()}
                      </div>
                      <div class="text-slate-600 text-sm">SF</div>
                    </div>
                    <div class="text-center p-3 bg-slate-50 rounded-xl">
                      <div class="text-lg font-bold text-slate-900">
                        {property.data.price}
                      </div>
                      <div class="text-slate-600 text-sm">per SF/year</div>
                    </div>
                  </div>
                  
                  <a 
                    href={`/warehouses/${property.data.slug}`} 
                    class="w-full bg-slate-100 hover:bg-slate-200 text-slate-700 text-center py-3 rounded-lg font-semibold transition-all duration-300"
                  >
                    View Details
                  </a>
                </div>
              </div>
            ))}
          </div>
        </section>
      )}
    </div>
  </main>

  <Footer />

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Simple scroll animations without external dependencies
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const element = entry.target as HTMLElement;
            element.style.opacity = '1';
            element.style.transform = 'translateY(0)';
          }
        });
      }, observerOptions);

      // Observe elements that should animate
      const animateElements = document.querySelectorAll('.animate-on-scroll, .stagger-children > *');
      animateElements.forEach(el => {
        const element = el as HTMLElement;
        element.style.opacity = '0';
        element.style.transform = 'translateY(20px)';
        element.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(element);
      });
    });
  </script>
</BaseLayout>