---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Navigation from '../../components/Navigation.astro';
import Footer from '../../components/Footer.astro';
import ImageGallery from '../../components/ImageGallery.astro';
import StandardizedContactForm from '../../components/StandardizedContactForm.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const warehouses = await getCollection('warehouses');
  return warehouses.map((warehouse) => ({
    params: { slug: warehouse.data.slug },
    props: { warehouse },
  }));
}

interface Props {
  warehouse: CollectionEntry<'warehouses'>;
}

const { warehouse } = Astro.props;
const { data } = warehouse;

// Get related properties
const allWarehouses = await getCollection('warehouses');
const relatedProperties = allWarehouses
  .filter(w => w.data.slug !== data.slug && w.data.availability === 'available')
  .slice(0, 3);

// Extract city for context
const city = data.location.split(',')[0]?.trim() || '';

// Get county - either from dedicated field or infer from location
let displayCounty = '';
if (data.county) {
  displayCounty = data.county;
} else {
  // Fallback logic for existing properties without county field
  const location = data.location.toLowerCase();
  if (location.includes('miami') || location.includes('doral') || location.includes('homestead') || location.includes('hialeah')) {
    displayCounty = 'Miami-Dade';
  } else if (location.includes('fort lauderdale') || location.includes('hollywood') || location.includes('pompano') || location.includes('plantation') || location.includes('davie')) {
    displayCounty = 'Broward';
  } else if (location.includes('west palm beach') || location.includes('boca raton') || location.includes('delray beach') || location.includes('boynton beach')) {
    displayCounty = 'Palm Beach';
  }
}
---

<BaseLayout 
  title={`${data.title} | ${data.location} | Warehouse Locating`}
  description={`${data.size.toLocaleString()} SF warehouse for lease in ${data.location}. ${data.price}. ${data.description.substring(0, 150)}...`}
>
  <Navigation />
  
  <main class="bg-white">
    <!-- Hero Summary Stripe -->
    <section class="pt-20 pb-8 bg-gradient-to-r from-primary-600 to-primary-700">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="grid lg:grid-cols-3 gap-6 items-center text-white">
          <div class="lg:col-span-2">
            <div class="flex items-center gap-3 mb-3">
              <span class={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${
                data.availability === 'available' 
                  ? 'bg-green-500 text-white' 
                  : 'bg-gray-400 text-white'
              }`}>
                {data.availability === 'available' ? 'Available Now' : 'Pending'}
              </span>
              {data.featured && (
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-yellow-500 text-white">
                  Featured
                </span>
              )}
            </div>
            <h1 class="text-3xl lg:text-4xl font-bold mb-3">{data.title}</h1>
            <div class="flex items-center gap-4 text-primary-100">
              <div class="flex items-center gap-1">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
                <span>{data.location}</span>
                {displayCounty && <span>â€¢ {displayCounty} County</span>}
              </div>
            </div>
          </div>
          
          <!-- Quick Stats -->
          <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
            <div class="space-y-4">
              <div class="text-center">
                <div class="text-3xl font-bold text-white">{data.price}</div>
                <div class="text-primary-100 text-sm">Lease Rate</div>
              </div>
              <div class="text-center">
                <div class="text-2xl font-bold text-white">{data.size.toLocaleString()}</div>
                <div class="text-primary-100 text-sm">Square Feet</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Property Details -->
    <section class="py-12">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="grid lg:grid-cols-3 gap-12">
          
          <!-- Main Content -->
          <div class="lg:col-span-2 space-y-8">
            
            <!-- Image Gallery -->
            {data.images && data.images.length > 0 && (
              <div>
                <h2 class="text-2xl font-bold text-gray-900 mb-6">Property Photos</h2>
                <ImageGallery images={data.images} title={data.title} />
              </div>
            )}
            
            <!-- Description -->
            <div>
              <h2 class="text-2xl font-bold text-gray-900 mb-6">Property Description</h2>
              <div class="prose prose-lg max-w-none text-gray-700 leading-relaxed">
                <p>{data.description}</p>
              </div>
            </div>
            
            <!-- Features -->
            {data.features && data.features.length > 0 && (
              <div>
                <h2 class="text-2xl font-bold text-gray-900 mb-6">Key Features</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
                  {data.features.map((feature) => (
                    <div class="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                      <svg class="w-5 h-5 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                      </svg>
                      <span class="text-gray-700">{feature}</span>
                    </div>
                  ))}
                </div>
              </div>
            )}
            
            <!-- Property Details Grid -->
            <div>
              <h2 class="text-2xl font-bold text-gray-900 mb-6">Property Details</h2>
              <div class="bg-gray-50 rounded-2xl p-6">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div class="space-y-4">
                    <div class="flex justify-between items-center py-3 border-b border-gray-200">
                      <span class="font-semibold text-gray-900">Size</span>
                      <span class="text-gray-700">{data.size.toLocaleString()} SF</span>
                    </div>
                    <div class="flex justify-between items-center py-3 border-b border-gray-200">
                      <span class="font-semibold text-gray-900">Price</span>
                      <span class="text-gray-700">{data.price}</span>
                    </div>
                    <div class="flex justify-between items-center py-3 border-b border-gray-200">
                      <span class="font-semibold text-gray-900">Availability</span>
                      <span class={`px-3 py-1 rounded-full text-sm font-medium ${
                        data.availability === 'available' 
                          ? 'bg-green-100 text-green-700' 
                          : 'bg-yellow-100 text-yellow-700'
                      }`}>
                        {data.availability === 'available' ? 'Available Now' : 'Pending'}
                      </span>
                    </div>
                  </div>
                  <div class="space-y-4">
                    <div class="flex justify-between items-center py-3 border-b border-gray-200">
                      <span class="font-semibold text-gray-900">Location</span>
                      <span class="text-gray-700">{data.location}</span>
                    </div>
                    {displayCounty && (
                      <div class="flex justify-between items-center py-3 border-b border-gray-200">
                        <span class="font-semibold text-gray-900">County</span>
                        <span class="text-gray-700">{displayCounty}</span>
                      </div>
                    )}
                    <div class="flex justify-between items-center py-3 border-b border-gray-200">
                      <span class="font-semibold text-gray-900">Address</span>
                      <span class="text-gray-700">{data.address}</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            <!-- Action Buttons -->
            <div class="flex flex-col sm:flex-row gap-4">
              <button 
                onclick="window.print()" 
                class="flex items-center justify-center gap-2 px-6 py-3 border-2 border-primary-600 text-primary-600 rounded-xl font-semibold hover:bg-primary-50 transition-colors no-print"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z"/>
                </svg>
                Print Details
              </button>
              <button 
                onclick="navigator.share ? navigator.share({title: document.title, url: window.location.href}) : navigator.clipboard.writeText(window.location.href).then(() => alert('Link copied to clipboard!'))"
                class="flex items-center justify-center gap-2 px-6 py-3 border-2 border-gray-300 text-gray-700 rounded-xl font-semibold hover:bg-gray-50 transition-colors no-print"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"/>
                </svg>
                Share Property
              </button>
            </div>
          </div>
          
          <!-- Sidebar -->
          <div class="space-y-8">
            
            <!-- Contact Form -->
            <div class="sticky top-8">
              <StandardizedContactForm 
                source={`Property Detail - ${data.title}`}
                title="Interested in this property?"
                description="Get more information or schedule a tour."
                warehouseProperty={data.title}
                showWarehouseSelect={false}
              />
            </div>
            
            <!-- Quick Contact -->
            <div class="bg-gray-50 rounded-2xl p-6">
              <h3 class="text-lg font-bold text-gray-900 mb-4">Need Help?</h3>
              <div class="space-y-3">
                <a 
                  href="tel:+19549379667" 
                  class="flex items-center gap-3 p-3 bg-white rounded-lg hover:bg-gray-50 transition-colors"
                >
                  <div class="w-10 h-10 bg-primary-100 rounded-lg flex items-center justify-center">
                    <svg class="w-5 h-5 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                    </svg>
                  </div>
                  <div>
                    <div class="font-semibold text-gray-900">Call Now</div>
                    <div class="text-sm text-gray-600">(954) 937-9667</div>
                  </div>
                </a>
                
                <a 
                  href="mailto:info@warehouselocating.com" 
                  class="flex items-center gap-3 p-3 bg-white rounded-lg hover:bg-gray-50 transition-colors"
                >
                  <div class="w-10 h-10 bg-primary-100 rounded-lg flex items-center justify-center">
                    <svg class="w-5 h-5 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                    </svg>
                  </div>
                  <div>
                    <div class="font-semibold text-gray-900">Email Us</div>
                    <div class="text-sm text-gray-600">info@warehouselocating.com</div>
                  </div>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Related Properties -->
    {relatedProperties.length > 0 && (
      <section class="py-12 bg-gray-50">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 class="text-2xl font-bold text-gray-900 mb-8 text-center">Similar Properties</h2>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
            {relatedProperties.map((property) => (
              <div class="bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300">
                <div class="relative h-48">
                  <img 
                    src={property.data.images && property.data.images[0] ? property.data.images[0] : '/placeholder.jpg'}
                    alt={property.data.title}
                    class="w-full h-full object-cover"
                  />
                  <div class="absolute top-4 left-4">
                    <span class="px-3 py-1 bg-green-100 text-green-700 rounded-full text-xs font-semibold">
                      Available
                    </span>
                  </div>
                </div>
                <div class="p-6">
                  <div class="flex items-center justify-between mb-3">
                    <span class="text-gray-500 text-sm">{property.data.size.toLocaleString()} SF</span>
                    <span class="text-lg font-bold text-primary-600">{property.data.price}</span>
                  </div>
                  <h3 class="text-xl font-bold text-gray-900 mb-2">{property.data.title}</h3>
                  <p class="text-gray-600 mb-4">{property.data.location}</p>
                  <div class="flex items-center justify-between">
                    <span class="text-sm text-gray-500">{property.data.size.toLocaleString()} SF</span>
                    <a 
                      href={`/warehouses/${property.data.slug}`}
                      class="bg-primary-600 text-white px-4 py-2 rounded-lg text-sm font-semibold hover:bg-primary-700 transition-colors duration-200"
                    >
                      View Details
                    </a>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    )}
  </main>
  
  <Footer />

  <!-- Print Styles -->
  <style>
    @media print {
      .no-print, nav, footer, .sticky {
        display: none !important;
      }
      
      .print-full-width {
        width: 100% !important;
        max-width: none !important;
      }
    }
  </style>
</BaseLayout>