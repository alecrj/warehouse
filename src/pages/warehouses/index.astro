---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// Get all warehouse listings
const allWarehouses = await getCollection('warehouses');
const availableWarehouses = allWarehouses.filter(warehouse => warehouse.data.availability === 'available');
const featuredWarehouses = availableWarehouses.filter(warehouse => warehouse.data.featured);
---

<BaseLayout 
  title="South Florida Warehouse Properties | Ariel Realty Group"
  description="Browse available warehouse and industrial properties across South Florida. Expert tenant representation by Ariel Realty Group - completely free for tenants."
>
  <!-- Hero Section -->
  <section class="py-20 bg-gradient-to-r from-slate-900 to-blue-900 text-white mt-20">
    <div class="max-w-7xl mx-auto px-6 lg:px-8">
      <div class="text-center">
        <h1 class="text-4xl lg:text-6xl font-bold mb-6">
          <span class="block">South Florida</span>
          <span class="bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent">Warehouse Properties</span>
        </h1>
        <p class="text-xl text-slate-300 max-w-2xl mx-auto mb-8">
          Search by size, city, budget. Featured warehouse listings with photos & specs. Representation by Ariel Realty Group.
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
          <span class="text-slate-400">Key info: total SF, clear height, dock doors, office %, asking rent, availability</span>
        </div>
      </div>
    </div>
  </section>

  <!-- Search and Filters -->
  <section class="py-12 bg-white border-b border-slate-200">
    <div class="max-w-7xl mx-auto px-6 lg:px-8">
      <div class="bg-slate-50 rounded-2xl p-8">
        <h2 class="text-2xl font-bold text-slate-900 mb-6 text-center">Find Your Perfect Warehouse</h2>
        
        <!-- Search Form -->
        <form id="property-search" class="grid md:grid-cols-4 gap-4 mb-8">
          <!-- Size Filter -->
          <div>
            <label for="size-filter" class="block text-sm font-semibold text-slate-700 mb-2">Size Range</label>
            <select id="size-filter" class="w-full px-4 py-3 rounded-xl border-2 border-slate-200 focus:border-blue-500 focus:outline-none transition-colors">
              <option value="">Any size</option>
              <option value="0-5000">Under 5,000 SF</option>
              <option value="5000-25000">5,000 - 25,000 SF</option>
              <option value="25000-100000">25,000 - 100,000 SF</option>
              <option value="100000-999999">100,000+ SF</option>
            </select>
          </div>
          
          <!-- Location Filter -->
          <div>
            <label for="location-filter" class="block text-sm font-semibold text-slate-700 mb-2">County</label>
            <select id="location-filter" class="w-full px-4 py-3 rounded-xl border-2 border-slate-200 focus:border-blue-500 focus:outline-none transition-colors">
              <option value="">Any location</option>
              <option value="miami-dade">Miami-Dade County</option>
              <option value="broward">Broward County</option>
              <option value="palm-beach">Palm Beach County</option>
            </select>
          </div>
          
          <!-- Budget Filter -->
          <div>
            <label for="budget-filter" class="block text-sm font-semibold text-slate-700 mb-2">Budget per SF</label>
            <select id="budget-filter" class="w-full px-4 py-3 rounded-xl border-2 border-slate-200 focus:border-blue-500 focus:outline-none transition-colors">
              <option value="">Any budget</option>
              <option value="0-10">Under $10</option>
              <option value="10-15">$10 - $15</option>
              <option value="15-20">$15 - $20</option>
              <option value="20-999">$20+</option>
            </select>
          </div>
          
          <!-- Clear Button -->
          <div class="flex items-end">
            <button 
              type="button" 
              id="clear-filters"
              class="w-full px-4 py-3 border-2 border-slate-300 text-slate-700 hover:border-slate-400 hover:text-slate-900 font-semibold rounded-xl transition-colors"
            >
              Clear Filters
            </button>
          </div>
        </form>
        
        <!-- Quick Search -->
        <div class="text-center">
          <div class="inline-flex flex-wrap gap-3 justify-center">
            <span class="text-sm text-slate-600 mr-2">Popular searches:</span>
            <button class="quick-search text-sm px-3 py-1 bg-blue-100 text-blue-700 rounded-full hover:bg-blue-200 transition-colors" data-search="miami">Miami</button>
            <button class="quick-search text-sm px-3 py-1 bg-blue-100 text-blue-700 rounded-full hover:bg-blue-200 transition-colors" data-search="fort lauderdale">Fort Lauderdale</button>
            <button class="quick-search text-sm px-3 py-1 bg-blue-100 text-blue-700 rounded-full hover:bg-blue-200 transition-colors" data-search="loading dock">Loading Docks</button>
            <button class="quick-search text-sm px-3 py-1 bg-blue-100 text-blue-700 rounded-full hover:bg-blue-200 transition-colors" data-search="large">Large (100K+ SF)</button>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Featured Properties -->
  {featuredWarehouses.length > 0 && (
    <section class="py-16 bg-blue-50">
      <div class="max-w-7xl mx-auto px-6 lg:px-8">
        <div class="text-center mb-12">
          <h2 class="text-3xl font-bold text-slate-900 mb-4">
            <span class="bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent">Featured</span> Properties
          </h2>
          <p class="text-lg text-slate-600">
            Hand-selected premium warehouse spaces with immediate availability
          </p>
        </div>
        
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-8">
          {featuredWarehouses.map((warehouse, index) => (
            <div 
              class="property-card scroll-scale-up group"
              style={`animation-delay: ${index * 100}ms;`}
              data-title={warehouse.data.title.toLowerCase()}
              data-location={warehouse.data.location.toLowerCase()}
              data-size={warehouse.data.size}
              data-features={warehouse.data.features?.join(' ').toLowerCase() || ''}
              data-availability={warehouse.data.availability}
              data-county={
                warehouse.data.location.toLowerCase().includes('miami') || warehouse.data.location.toLowerCase().includes('dade') 
                  ? 'miami-dade' 
                  : warehouse.data.location.toLowerCase().includes('broward') 
                  ? 'broward' 
                  : warehouse.data.location.toLowerCase().includes('palm') 
                  ? 'palm-beach' 
                  : ''
              }
            >
              <div class="card-premium overflow-hidden hover:shadow-2xl transition-all duration-500">
                <!-- Image -->
                <div class="relative aspect-w-16 aspect-h-10 overflow-hidden">
                  <img 
                    src={warehouse.data.images?.[0] || '/images/warehouse-placeholder.jpg'}
                    alt={warehouse.data.title}
                    class="w-full h-48 object-cover group-hover:scale-110 transition-transform duration-700"
                  />
                  <div class="absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-transparent"></div>
                  
                  <!-- Status Badge -->
                  <div class="absolute top-4 left-4">
                    <span class="px-3 py-1 bg-green-500 text-white text-sm font-medium rounded-full">
                      Available
                    </span>
                  </div>
                  
                  <!-- Featured Badge -->
                  <div class="absolute top-4 right-4">
                    <span class="px-3 py-1 bg-blue-500 text-white text-sm font-medium rounded-full">
                      Featured
                    </span>
                  </div>
                </div>
                
                <!-- Content -->
                <div class="p-6">
                  <div class="flex items-center text-slate-600 mb-2">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                    </svg>
                    <span class="text-sm">{warehouse.data.location}</span>
                  </div>
                  
                  <h3 class="text-xl font-bold text-slate-900 mb-4 group-hover:text-blue-600 transition-colors">
                    {warehouse.data.title}
                  </h3>
                  
                  <!-- Stats -->
                  <div class="grid grid-cols-2 gap-4 mb-6">
                    <div class="text-center p-3 bg-slate-50 rounded-lg">
                      <div class="text-lg font-bold text-slate-900">
                        {warehouse.data.size.toLocaleString()}
                      </div>
                      <div class="text-sm text-slate-600">Square Feet</div>
                    </div>
                    <div class="text-center p-3 bg-slate-50 rounded-lg">
                      <div class="text-lg font-bold text-slate-900">
                        {warehouse.data.price}
                      </div>
                      <div class="text-sm text-slate-600">per SF/year</div>
                    </div>
                  </div>
                  
                  <!-- Features -->
                  {warehouse.data.features && warehouse.data.features.length > 0 && (
                    <div class="mb-6">
                      <div class="flex flex-wrap gap-2">
                        {warehouse.data.features.slice(0, 3).map((feature: string) => (
                          <span class="text-sm px-3 py-1 bg-blue-50 text-blue-700 rounded-full">
                            {feature}
                          </span>
                        ))}
                        {warehouse.data.features.length > 3 && (
                          <span class="text-sm px-3 py-1 bg-slate-100 text-slate-600 rounded-full">
                            +{warehouse.data.features.length - 3} more
                          </span>
                        )}
                      </div>
                    </div>
                  )}
                  
                  <!-- Actions -->
                  <div class="flex gap-3">
                    <a 
                      href={`/warehouses/${warehouse.data.slug}`} 
                      class="flex-1 btn-secondary text-center py-3 border-2 border-slate-200 text-slate-700 hover:border-blue-300 hover:text-blue-600 font-semibold rounded-xl transition-colors group"
                    >
                      View Details
                      <svg class="w-4 h-4 ml-2 inline group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                      </svg>
                    </a>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- All Properties Section -->
  <section class="py-16 bg-white">
    <div class="max-w-7xl mx-auto px-6 lg:px-8">
      <!-- Results Summary -->
      <div class="flex justify-between items-center mb-8">
        <div class="scroll-fade-in">
          <h2 class="text-3xl font-bold text-slate-900">
            <span id="results-count">{availableWarehouses.length}</span> Properties Available
          </h2>
          <p class="text-lg text-slate-600 mt-1">
            Premium industrial spaces across South Florida
          </p>
        </div>
        
        <!-- Sort Options -->
        <div class="hidden md:flex items-center space-x-4">
          <label for="sort-by" class="text-sm font-medium text-slate-700">Sort by:</label>
          <select id="sort-by" class="px-3 py-2 border border-slate-300 rounded-lg text-sm focus:border-blue-500 focus:outline-none">
            <option value="featured">Featured First</option>
            <option value="size-desc">Size (Largest)</option>
            <option value="size-asc">Size (Smallest)</option>
            <option value="price-asc">Price (Low to High)</option>
            <option value="price-desc">Price (High to Low)</option>
          </select>
        </div>
      </div>

      <!-- Loading State -->
      <div id="loading-state" class="hidden">
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {[1,2,3,4,5,6].map(() => (
            <div class="card-premium p-6 animate-pulse">
              <div class="bg-slate-200 h-48 rounded-xl mb-4"></div>
              <div class="space-y-3">
                <div class="h-4 bg-slate-200 rounded w-3/4"></div>
                <div class="h-4 bg-slate-200 rounded w-1/2"></div>
                <div class="h-8 bg-slate-200 rounded"></div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Properties Grid -->
      <div id="properties-grid" class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {availableWarehouses.map((warehouse, index) => (
          <div 
            class="property-card scroll-scale-up group"
            style={`animation-delay: ${index * 50}ms;`}
            data-title={warehouse.data.title.toLowerCase()}
            data-location={warehouse.data.location.toLowerCase()}
            data-size={warehouse.data.size}
            data-price-num={parseFloat(warehouse.data.price.replace(/[^0-9.]/g, '')) || 0}
            data-features={warehouse.data.features?.join(' ').toLowerCase() || ''}
            data-availability={warehouse.data.availability}
            data-featured={warehouse.data.featured ? 'true' : 'false'}
            data-county={
              warehouse.data.location.toLowerCase().includes('miami') || warehouse.data.location.toLowerCase().includes('dade') 
                ? 'miami-dade' 
                : warehouse.data.location.toLowerCase().includes('broward') 
                ? 'broward' 
                : warehouse.data.location.toLowerCase().includes('palm') 
                ? 'palm-beach' 
                : ''
            }
          >
            <div class="card-premium overflow-hidden hover:shadow-2xl transition-all duration-500">
              <!-- Image -->
              <div class="relative aspect-w-16 aspect-h-10 overflow-hidden">
                <img 
                  src={warehouse.data.images?.[0] || '/images/warehouse-placeholder.jpg'}
                  alt={warehouse.data.title}
                  class="w-full h-48 object-cover group-hover:scale-110 transition-transform duration-700"
                />
                <div class="absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-transparent"></div>
                
                <!-- Status Badge -->
                <div class="absolute top-4 left-4">
                  <span class="px-3 py-1 bg-green-500 text-white text-sm font-medium rounded-full">
                    Available
                  </span>
                </div>
                
                <!-- Featured Badge -->
                {warehouse.data.featured && (
                  <div class="absolute top-4 right-4">
                    <span class="px-3 py-1 bg-blue-500 text-white text-sm font-medium rounded-full">
                      Featured
                    </span>
                  </div>
                )}
              </div>
              
              <!-- Content -->
              <div class="p-6">
                <div class="flex items-center text-slate-600 mb-2">
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                  </svg>
                  <span class="text-sm">{warehouse.data.location}</span>
                </div>
                
                <h3 class="text-xl font-bold text-slate-900 mb-4 group-hover:text-blue-600 transition-colors">
                  {warehouse.data.title}
                </h3>
                
                <!-- Stats -->
                <div class="grid grid-cols-2 gap-4 mb-6">
                  <div class="text-center p-3 bg-slate-50 rounded-lg">
                    <div class="text-lg font-bold text-slate-900">
                      {warehouse.data.size.toLocaleString()}
                    </div>
                    <div class="text-sm text-slate-600">Square Feet</div>
                  </div>
                  <div class="text-center p-3 bg-slate-50 rounded-lg">
                    <div class="text-lg font-bold text-slate-900">
                      {warehouse.data.price}
                    </div>
                    <div class="text-sm text-slate-600">per SF/year</div>
                  </div>
                </div>
                
                <!-- Features -->
                {warehouse.data.features && warehouse.data.features.length > 0 && (
                  <div class="mb-6">
                    <div class="flex flex-wrap gap-2">
                      {warehouse.data.features.slice(0, 2).map((feature: string) => (
                        <span class="text-sm px-3 py-1 bg-blue-50 text-blue-700 rounded-full">
                          {feature}
                        </span>
                      ))}
                      {warehouse.data.features.length > 2 && (
                        <span class="text-sm px-3 py-1 bg-slate-100 text-slate-600 rounded-full">
                          +{warehouse.data.features.length - 2} more
                        </span>
                      )}
                    </div>
                  </div>
                )}
                
                <!-- Actions -->
                <div class="flex gap-3">
                  <a 
                    href={`/warehouses/${warehouse.data.slug}`} 
                    class="flex-1 btn-secondary text-center py-3 border-2 border-slate-200 text-slate-700 hover:border-blue-300 hover:text-blue-600 font-semibold rounded-xl transition-colors group"
                  >
                    View Details
                    <svg class="w-4 h-4 ml-2 inline group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                    </svg>
                  </a>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>

      <!-- No Results Message -->
      <div id="no-results" class="hidden text-center py-20">
        <div class="max-w-md mx-auto">
          <svg class="w-20 h-20 text-slate-400 mx-auto mb-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
          </svg>
          <h3 class="text-2xl font-bold text-slate-900 mb-4">No properties match your criteria</h3>
          <p class="text-slate-600 mb-8">Try adjusting your filters or contact us to help find the perfect warehouse for your needs.</p>
          <a 
            href="/contact" 
            class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white font-semibold rounded-xl transition-all duration-300 transform hover:scale-105"
          >
            <span>Contact Us for Help</span>
            <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
            </svg>
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="py-20 bg-gradient-to-r from-blue-600 to-indigo-600">
    <div class="max-w-7xl mx-auto px-6 lg:px-8 text-center">
      <h2 class="text-4xl font-bold text-white mb-4">
        Ready to Find Your Perfect Warehouse?
      </h2>
      <p class="text-xl text-blue-100 mb-8 max-w-2xl mx-auto">
        Let our experts help you find and negotiate the best warehouse lease in South Florida. Our service is completely free for tenants.
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <a 
          href="/contact" 
          class="inline-flex items-center px-8 py-4 bg-white text-blue-600 hover:bg-blue-50 font-bold text-lg rounded-2xl transition-all duration-300 transform hover:scale-105 shadow-xl"
        >
          <span>Get Free Representation</span>
          <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
          </svg>
        </a>
        <a 
          href="tel:954-937-9667" 
          class="inline-flex items-center px-8 py-4 border-2 border-white text-white hover:bg-white/10 font-bold text-lg rounded-2xl transition-all duration-300 backdrop-blur-sm"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
          </svg>
          <span>Call: 954-937-9667</span>
        </a>
      </div>
    </div>
  </section>
</BaseLayout>

<script>
  // Search and Filter Functionality
  document.addEventListener('DOMContentLoaded', function() {
    const sizeFilter = document.getElementById('size-filter') as HTMLSelectElement;
    const locationFilter = document.getElementById('location-filter') as HTMLSelectElement;
    const budgetFilter = document.getElementById('budget-filter') as HTMLSelectElement;
    const clearFilters = document.getElementById('clear-filters') as HTMLButtonElement;
    const sortBy = document.getElementById('sort-by') as HTMLSelectElement;
    const propertyCards = document.querySelectorAll('.property-card') as NodeListOf<HTMLElement>;
    const propertiesGrid = document.getElementById('properties-grid') as HTMLElement;
    const loadingState = document.getElementById('loading-state') as HTMLElement;
    const noResults = document.getElementById('no-results') as HTMLElement;
    const resultsCount = document.getElementById('results-count') as HTMLElement;
    const quickSearchButtons = document.querySelectorAll('.quick-search') as NodeListOf<HTMLButtonElement>;
    
    // Filter and sort functions
    function filterProperties() {
      if (!sizeFilter || !locationFilter || !budgetFilter || !resultsCount || !noResults || !propertiesGrid) return;
      
      const sizeRange = sizeFilter.value;
      const location = locationFilter.value;
      const budgetRange = budgetFilter.value;
      
      let visibleCount = 0;
      
      propertyCards.forEach(card => {
        let isVisible = true;
        
        // Size filter
        if (sizeRange) {
          const [minSize, maxSize] = sizeRange.split('-').map(Number);
          const cardSize = parseInt(card.dataset.size || '0');
          if (maxSize) {
            isVisible = isVisible && cardSize >= minSize && cardSize <= maxSize;
          } else {
            isVisible = isVisible && cardSize >= minSize;
          }
        }
        
        // Location filter
        if (location) {
          const cardCounty = card.dataset.county || '';
          isVisible = isVisible && cardCounty === location;
        }
        
        // Budget filter
        if (budgetRange) {
          const [minBudget, maxBudget] = budgetRange.split('-').map(Number);
          const cardPrice = parseFloat(card.dataset.priceNum || '0');
          if (maxBudget && maxBudget !== 999) {
            isVisible = isVisible && cardPrice >= minBudget && cardPrice <= maxBudget;
          } else {
            isVisible = isVisible && cardPrice >= minBudget;
          }
        }
        
        if (isVisible) {
          card.style.display = 'block';
          visibleCount++;
        } else {
          card.style.display = 'none';
        }
      });
      
      // Update results count
      resultsCount.textContent = visibleCount.toString();
      
      // Show/hide no results message
      if (visibleCount === 0) {
        noResults.classList.remove('hidden');
        propertiesGrid.classList.add('hidden');
      } else {
        noResults.classList.add('hidden');
        propertiesGrid.classList.remove('hidden');
      }
    }
    
    function sortProperties() {
      if (!sortBy || !propertiesGrid) return;
      
      const sortValue = sortBy.value;
      const cards = Array.from(propertyCards);
      
      cards.sort((a, b) => {
        switch (sortValue) {
          case 'featured':
            const aFeatured = a.dataset.featured === 'true';
            const bFeatured = b.dataset.featured === 'true';
            if (aFeatured && !bFeatured) return -1;
            if (!aFeatured && bFeatured) return 1;
            return 0;
          
          case 'size-desc':
            return parseInt(b.dataset.size || '0') - parseInt(a.dataset.size || '0');
          
          case 'size-asc':
            return parseInt(a.dataset.size || '0') - parseInt(b.dataset.size || '0');
          
          case 'price-asc':
            return parseFloat(a.dataset.priceNum || '0') - parseFloat(b.dataset.priceNum || '0');
          
          case 'price-desc':
            return parseFloat(b.dataset.priceNum || '0') - parseFloat(a.dataset.priceNum || '0');
          
          default:
            return 0;
        }
      });
      
      // Re-append sorted cards
      cards.forEach(card => propertiesGrid.appendChild(card));
    }
    
    function searchProperties(searchTerm: string) {
      if (!resultsCount || !noResults || !propertiesGrid) return;
      
      propertyCards.forEach(card => {
        const title = card.dataset.title || '';
        const location = card.dataset.location || '';
        const features = card.dataset.features || '';
        
        const isMatch = title.includes(searchTerm.toLowerCase()) ||
                       location.includes(searchTerm.toLowerCase()) ||
                       features.includes(searchTerm.toLowerCase());
        
        if (isMatch) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
      
      // Update count
      const visibleCards = Array.from(propertyCards).filter(card => card.style.display !== 'none');
      resultsCount.textContent = visibleCards.length.toString();
      
      if (visibleCards.length === 0) {
        noResults.classList.remove('hidden');
        propertiesGrid.classList.add('hidden');
      } else {
        noResults.classList.add('hidden');
        propertiesGrid.classList.remove('hidden');
      }
    }
    
    // Event listeners
    if (sizeFilter) sizeFilter.addEventListener('change', filterProperties);
    if (locationFilter) locationFilter.addEventListener('change', filterProperties);
    if (budgetFilter) budgetFilter.addEventListener('change', filterProperties);
    if (sortBy) sortBy.addEventListener('change', sortProperties);
    
    if (clearFilters) {
      clearFilters.addEventListener('click', function() {
        if (sizeFilter) sizeFilter.value = '';
        if (locationFilter) locationFilter.value = '';
        if (budgetFilter) budgetFilter.value = '';
        
        propertyCards.forEach(card => {
          card.style.display = 'block';
        });
        
        if (resultsCount) resultsCount.textContent = propertyCards.length.toString();
        if (noResults) noResults.classList.add('hidden');
        if (propertiesGrid) propertiesGrid.classList.remove('hidden');
      });
    }
    
    // Quick search functionality
    quickSearchButtons.forEach(button => {
      button.addEventListener('click', function(this: HTMLButtonElement) {
        const searchTerm = this.dataset.search || '';
        
        // Clear filters first
        if (sizeFilter) sizeFilter.value = '';
        if (locationFilter) locationFilter.value = '';
        if (budgetFilter) budgetFilter.value = '';
        
        // Apply search
        if (searchTerm === 'large') {
          if (sizeFilter) {
            sizeFilter.value = '100000-999999';
            filterProperties();
          }
        } else {
          searchProperties(searchTerm);
        }
      });
    });
    
    // Initial sort by featured
    sortProperties();
  });
</script>

<style>
  /* Animation styles */
  .scroll-fade-in {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 1s ease-out forwards;
  }
  
  .scroll-scale-up {
    opacity: 0;
    transform: scale(0.95);
    animation: scaleUp 0.8s ease-out forwards;
  }
  
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes scaleUp {
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  .property-card {
    transition: all 0.3s ease;
  }
  
  .bg-clip-text {
    -webkit-background-clip: text;
    background-clip: text;
  }
</style>